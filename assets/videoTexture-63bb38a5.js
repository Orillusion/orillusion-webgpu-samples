import"./modulepreload-polyfill-3cfb730f.js";import{b as w}from"./basic.vert-ae845a6f.js";import{v as l,a as v}from"./cube-91a5abf9.js";import{b as P}from"./math-7b9ebb83.js";import"./mat4-5036aab8.js";const b=`@group(1) @binding(0) var Sampler: sampler;
@group(1) @binding(1) var Texture: texture_external;

@fragment
fn main(@location(0) fragUV: vec2<f32>,
        @location(1) fragPosition: vec4<f32>) -> @location(0) vec4<f32> {
  return textureSampleBaseClampToEdge(Texture, Sampler, fragUV) * fragPosition;
}
`,B="/orillusion-webgpu-samples/video.mp4";async function T(e){if(!navigator.gpu)throw new Error("Not Support WebGPU");const i=await navigator.gpu.requestAdapter();if(!i)throw new Error("No Adapter Found");const r=await i.requestDevice(),n=e.getContext("webgpu"),a=navigator.gpu.getPreferredCanvasFormat(),o=window.devicePixelRatio||1;e.width=e.clientWidth*o,e.height=e.clientHeight*o;const t={width:e.width,height:e.height};return n.configure({device:r,format:a,alphaMode:"opaque"}),{device:r,context:n,format:a,size:t}}async function y(e,i,r){const n=await e.createRenderPipelineAsync({label:"Basic Pipline",layout:"auto",vertex:{module:e.createShaderModule({code:w}),entryPoint:"main",buffers:[{arrayStride:20,attributes:[{shaderLocation:0,offset:0,format:"float32x3"},{shaderLocation:1,offset:12,format:"float32x2"}]}]},fragment:{module:e.createShaderModule({code:b}),entryPoint:"main",targets:[{format:i}]},primitive:{topology:"triangle-list",cullMode:"back",frontFace:"ccw"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"}}),a=e.createTexture({size:r,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),o=a.createView(),t=e.createBuffer({label:"GPUBuffer store vertex",size:l.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(t,0,l);const u=e.createBuffer({label:"GPUBuffer store 4x4 matrix",size:4*4*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),s=e.createBindGroup({label:"Uniform Group with Matrix",layout:n.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:u}}]});return{pipeline:n,vertexBuffer:t,mvpBuffer:u,uniformGroup:s,depthTexture:a,depthView:o}}function U(e,i,r,n){const a=e.createCommandEncoder(),o={colorAttachments:[{view:i.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:r.depthView,depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}},t=a.beginRenderPass(o);t.setPipeline(r.pipeline),t.setBindGroup(0,r.uniformGroup),t.setBindGroup(1,n),t.setVertexBuffer(0,r.vertexBuffer),t.draw(v),t.end(),e.queue.submit([a.finish()])}async function G(){const e=document.createElement("video");e.loop=!0,e.autoplay=!0,e.muted=!0,e.src=B,await e.play();const i=document.querySelector("canvas");if(!i)throw new Error("No Canvas");const{device:r,context:n,format:a,size:o}=await T(i),t=await y(r,a,o),u=r.createSampler({magFilter:"linear",minFilter:"linear"});let s=o.width/o.height;const f={x:0,y:0,z:-5},m={x:1,y:1,z:1},c={x:0,y:0,z:0};function d(){new VideoFrame(e).close();const h=r.importExternalTexture({source:e}),g=r.createBindGroup({layout:t.pipeline.getBindGroupLayout(1),entries:[{binding:0,resource:u},{binding:1,resource:h}]}),p=Date.now()/1e3;c.x=Math.sin(p),c.y=Math.cos(p);const x=P(s,f,c,m);r.queue.writeBuffer(t.mvpBuffer,0,x.buffer),U(r,n,t,g),requestAnimationFrame(d)}d(),window.addEventListener("resize",()=>{o.width=i.width=i.clientWidth*devicePixelRatio,o.height=i.height=i.clientHeight*devicePixelRatio,t.depthTexture.destroy(),t.depthTexture=r.createTexture({size:o,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),t.depthView=t.depthTexture.createView(),s=o.width/o.height})}G();
